%% FIXATION STABILITY
% Marcello A. Maniglia, 2017-2019/10/28 - 2024
%this script is part of the OculomotorStrategyToolkit (Maniglia, Visscher
%and Seitz, 2020)and it analyzes eyetracker data generated by the
%'PRL_test.m' to extract the Fixation stability metric. This is defined
%as the dispersion of eye positions after a first saccade on a given trial
%(mean across trials). This metric is computed by first identifying all eye
%positions after the first fixation of the trial (as defined in the
%Saccadic re-referencing script). Kernel Density Estimator is fit to these
%positions, and is weighted for duration (KDE/duration of the trial in
%frames). The location of each trial?s KDE is then normalized to the
%estimated across-trial PRL location. This location is defined as the
%averaged center of the single-trial BCEAs normalized by the position of
%the first fixation, and centered on the averaged center of the
%single-trial BCEAs. Additionally, the script produces additional output
%related to fixation duration, correlation of fixation duration and
%dispersion etc.

%%
close all

addpath([cd '/Functions']);

if answer{2} == '1'
    BasePost = 'Pre';
elseif answer{2} == '2'
    BasePost = 'Post';
end


Directory =[SubjectDirectory{1,1} '\OculomotorFigures\'];
mkdir(Directory);


firsttrial=1;
totaltrial=str2num(TrialNum(6:end));
theta = 0;
theeccentricity_X_scotoma = 0;
theeccentricity_Y_scotoma = 0;

% in some data files ran with the older code, the eyetracker timing is not
% aligned with the PTB events. Lines below take care of that
if exist('newEyeSummary')
    EyeSummary=newEyeSummary;

% in case the eyetracker didn't work, we use eye data collected by a
% different variable
for ui=1:totaltrial
    TrialNum = strcat('Trial',num2str(ui));
    EyeSummary.(TrialNum).FixationIndices=EyeSummary.(TrialNum).FixationIndices_updated;
end

end

% replace the default 'no eye data' value from Vpixx ('33727') with nan
for ui=1:totaltrial
    TrialNum = strcat('Trial',num2str(ui));
    for uii=1:length(EyeSummary.(TrialNum).EyeData)       
        if EyeSummary.(TrialNum).EyeData(uii,1)==33727
            EyeSummary.(TrialNum).EyeData(uii,1:2)=nan;
        end
    end
end


%define the duration of the fixation in seconds (default: .133s)
durationtocallfixation=.133;
%duration of the fixation in frames (ifi = inter frame interval)
framestocallfixation=round(durationtocallfixation/ifi);

%screen info
Xcenter=wRect(3)/2;
Ycenter=wRect(4)/2;
xlimit=(wRect(3)/2)/pix_deg; % pix_deg info are stored in the data files
ylimit=(wRect(4)/2)/pix_deg_vert;

%initialize fixation counter
fixcounter=[];

%initialize heatmap
sampleX=(-xlimit:1:xlimit);
sampleY=(-ylimit:1:ylimit);
heatmatrix= zeros(length(sampleX), length(sampleY));

%% simulated scotoma: initialize the simulated scotoma region
radius = scotomasize(1)/2; %radius of scotoma
[sx,sy]=meshgrid(-wRect(3)/2:wRect(3)/2,-wRect(4)/2:wRect(4)/2);
circlePixels=sx.^2 + sy.^2 <= radius.^2;
d=(circlePixels==1);
newfig=circlePixels;
circlePixels=newfig;

%% initialize graph

% Ellipse parameters to draw the scotoma on the graph.
t = linspace(0, 360,1000);
xAmplitude = scotomadeg/2; % horizontal axis + offset
yAmplitude = scotomadeg/2; % vertical axis + offset
x = xAmplitude * sind(t);
y = yAmplitude * cosd(t);
R  = [cos(theta) -sin(theta); ...
    sin(theta)  cos(theta)];
rCoords = R*[x ; y];
xr = rCoords(1,:)';
yr = rCoords(2,:)';
xx=xr+theeccentricity_X_scotoma/pix_deg;
yy=yr+theeccentricity_Y_scotoma/pix_deg;


%initialize single trial BCEA calculation
BCEA_data=zeros(totaltrial,1);

correctCounter=zeros(totaltrial,1);
durationTrial=zeros(totaltrial,1);
postcounter_c_c=0;

%% BCEA calculation/KDE info
npern=512; % KDE dimension
Kernel_X_centered=zeros(npern,npern,totaltrial);
Kernel_Y_centered=zeros(npern,npern,totaltrial);
Kernel_density_centered=zeros(npern,npern,totaltrial);
clear theStart

firstframetarget=[];
fixations_outside_scotoma=nan(totaltrial,1);

for i=firsttrial:totaltrial

  %   if ismember(i,theArray)
    TrialNum = strcat('Trial',num2str(i));
    firstfix=0;
    %find the first available eye position after stimulus presentation
    
    %            FramesAfterTargetPresentation=find(EyeSummary.(TrialNum).EyeData(:,5)>=EyeSummary.(TrialNum).TimeStamps.Stimulus);
    FramesAfterTargetPresentation=find(EyeSummary.(TrialNum).EyeData(:,5)>=EyeSummary.(TrialNum).TimeStamps.Fixation(end));
    
    %  if sum(EyeSummary.(TrialNum).EyeData(:,5)>=EyeSummary.(TrialNum).TimeStamps.Stimulus)>=1 %if we have eye data after stimulus presentation
    if length(FramesAfterTargetPresentation)>0 %at least one valid frame after target presentation
        
        firstframetarget=[firstframetarget FramesAfterTargetPresentation(1) ];
        %target coordinates (with respect to the center)
        Heatmap.(TrialNum).TargetX=EyeSummary.(TrialNum).TargetX*pix_deg;
        Heatmap.(TrialNum).TargetY=EyeSummary.(TrialNum).TargetY*pix_deg;
        tgt_y=Heatmap.(TrialNum).TargetY;
        tgt_x=Heatmap.(TrialNum).TargetX;
        Heatmap.(TrialNum).TargetXRespectToCenter=Xcenter+Heatmap.(TrialNum).TargetX;
        Heatmap.(TrialNum).TargetYRespectToCenter=Ycenter+Heatmap.(TrialNum).TargetY;
      if length(EyeSummary.(TrialNum).FixationIndices)>1  
        if EyeSummary.(TrialNum).FixationIndices(end,2)==0 % sometimes the end of the last fixation is missing so we assign the duration of the last element
            EyeSummary.(TrialNum).FixationIndices(end,2)=length(EyeSummary.(TrialNum).EyeData);         %fix missing ending frame of last fixation in FixationIndices
        end
      end
        % fixations after target presentation
        clear validFixationIndexes
        validFixationIndexes=EyeSummary.(TrialNum).FixationIndices(EyeSummary.(TrialNum).FixationIndices(:,1)>FramesAfterTargetPresentation(1),:);
        
        countervalidFixationIndexes{i}=validFixationIndexes;
        clear startValidFixationIndexes
        
        %fixations after enough time from target presentation that last
        %long enough (as much as specified above)
        startValidFixationIndexes=[];
        endValidFixationIndexes=[];
        if isempty(validFixationIndexes)==0
            for jid=1:length(validFixationIndexes(:,1))
                if validFixationIndexes(jid,2)-validFixationIndexes(jid,1)>=framestocallfixation  && validFixationIndexes(jid,1)>FramesAfterTargetPresentation(1)+10
                    startValidFixationIndexes=[startValidFixationIndexes validFixationIndexes(jid,1)];
                    endValidFixationIndexes=[endValidFixationIndexes validFixationIndexes(jid,2)];
                    % break
                end
            end
        end
        
        startFirstValidFixationIndexes=[];
        endFirstValidFixationIndexes=[];
        
        % first fixation in the trial (that took place long enough after
        % target appearance)
        if isempty(validFixationIndexes)==0
            for jiid=1:length(validFixationIndexes(:,1))
                if validFixationIndexes(jiid,2)-validFixationIndexes(jiid,1)>=framestocallfixation && validFixationIndexes(jiid,1)>FramesAfterTargetPresentation(1)+10
                    startFirstValidFixationIndexes=validFixationIndexes(jiid,1);
                    endFirstValidFixationIndexes=validFixationIndexes(jiid,2);
                    break % break because we look for the first fixation per trial
                end
            end
        end
        
        newfixation.(TrialNum).fixStart=[];
        newfixation.(TrialNum).fixStop=[];
        
        % only consider fixations periods of stable eye position for enough
        % time (as defined in the framestocallfixation  above)
       if (EyeSummary.(TrialNum).FixationIndices(:,1))~=0
           for fiu=1:length(EyeSummary.(TrialNum).FixationIndices(:,1))
            if EyeSummary.(TrialNum).FixationIndices(fiu,2)-EyeSummary.(TrialNum).FixationIndices(fiu,1)>=framestocallfixation
                %initial frame of each valid fixation
                newfixation.(TrialNum).fixStart=[newfixation.(TrialNum).fixStart EyeSummary.(TrialNum).FixationIndices(fiu,1)];
                % final frame of each valid fixation
                newfixation.(TrialNum).fixStop=[newfixation.(TrialNum).fixStop EyeSummary.(TrialNum).FixationIndices(fiu,2)];
            end
           end
       end
        
        if length(newfixation.(TrialNum).fixStart)>1 %if we have at least one fixation that meets our constraints
            
            fix=0;
            counter_valid_fixation=0;
            counter_fixations=0;
            for w=1:length(newfixation.(TrialNum).fixStart)
                totalfixation(i)=w;

                            % absolute eye position
          %  EyeX=EyeSummary.(TrialNum).EyeData(startValidFixationIndexes,1);
          %  EyeY=EyeSummary.(TrialNum).EyeData(startValidFixationIndexes,2);
            
            
                EyeX=EyeSummary.(TrialNum).EyeData(newfixation.(TrialNum).fixStart(w),1);
                EyeY=EyeSummary.(TrialNum).EyeData(newfixation.(TrialNum).fixStart(w),2);
                        %  eye position normalized by target location
      %      diffx=EyeX-(wRect(3)/2+tgt_x);
       %     diffy=EyeY-(wRect(4)/2+tgt_y);
            
                                    %  target location normalized by eye position 
            diffx=((wRect(3)/2+tgt_x)-EyeX);
            diffy=((wRect(4)/2+tgt_y)-EyeY);
                
                if newfixation.(TrialNum).fixStart(w)>(FramesAfterTargetPresentation(1)+framestocallfixation)
                    counter_fixations=counter_fixations+1;
                    firstfix=1;
                    start=newfixation.(TrialNum).fixStart(w);
                    totalfixation_post(i)=counter_fixations;
                    counter_valid_fixation=length(EyeSummary.(TrialNum).EyeData(start:end,1));
                    %we take all the eye data points after this fixation.
                    %In the analysis we include all the eye positions after
                    %a first fixation which is long enough and happens long
                    %enough after stimulus presentation takes place
                    Heatmap.(TrialNum).OneFixationX(1:counter_valid_fixation)=EyeSummary.(TrialNum).EyeData(start:end,1);
                    Heatmap.(TrialNum).OneFixationY(1:counter_valid_fixation)=EyeSummary.(TrialNum).EyeData(start:end,2);
                    durationTrial(i)=counter_valid_fixation;
                    theStart(i)=start;
                    
                    if round(wRect(3)/2+diffx)<=wRect(3) && round(wRect(4)/2+diffy)<=wRect(4) && round(wRect(3)/2+diffx)> 0 && round(wRect(4)/2+diffy)>0
                        if circlePixels(round(wRect(4)/2+diffy),round(wRect(3)/2+diffx))==0
                            if startValidFixationIndexes(counter_fixations)==startFirstValidFixationIndexes
                                %if first fixation happens outside the
                                %scotoma
                                fixations_outside_scotoma(i)=1;
                            end
                        end
                    end
                    break
                end
            end
            
            if isfield(Heatmap.(TrialNum),'OneFixationX')
                Heatmap.(TrialNum).OneFixationXClean=Heatmap.(TrialNum).OneFixationX(Heatmap.(TrialNum).OneFixationX~=0);
                Heatmap.(TrialNum).OneFixationYClean=Heatmap.(TrialNum).OneFixationY(Heatmap.(TrialNum).OneFixationY~=0);
                %remove nans
                %    Heatmap.(TrialNum).OneFixationXClean=Heatmap.(TrialNum).OneFixationXClean(Heatmap.(TrialNum).OneFixationXClean~=nan);
                %   Heatmap.(TrialNum).OneFixationYClean=Heatmap.(TrialNum).OneFixationYClean(Heatmap.(TrialNum).OneFixationYClean~=nan);
                
                Heatmap.(TrialNum).OneFixationXClean=Heatmap.(TrialNum).OneFixationXClean(~isnan(Heatmap.(TrialNum).OneFixationXClean));
                Heatmap.(TrialNum).OneFixationYClean=Heatmap.(TrialNum).OneFixationYClean(~isnan(Heatmap.(TrialNum).OneFixationYClean));
                
                %eye position normalized by the centered target location
                offsetTarget.(TrialNum).FixationY=(Heatmap.(TrialNum).OneFixationYClean)-Heatmap.(TrialNum).TargetYRespectToCenter;
                offsetTarget.(TrialNum).FixationX=(Heatmap.(TrialNum).OneFixationXClean)-Heatmap.(TrialNum).TargetXRespectToCenter;
                
                                %target location  normalized by eye position

                offsetTarget.(TrialNum).FixationY=Heatmap.(TrialNum).TargetYRespectToCenter-(Heatmap.(TrialNum).OneFixationYClean);
                offsetTarget.(TrialNum).FixationX=Heatmap.(TrialNum).TargetXRespectToCenter-(Heatmap.(TrialNum).OneFixationXClean);
                
                %to account for uneven length of x and y array (sometimes it happens)
                if length(offsetTarget.(TrialNum).FixationY)~=length(offsetTarget.(TrialNum).FixationX)                    
                    if length(offsetTarget.(TrialNum).FixationY)>length(offsetTarget.(TrialNum).FixationX)
                        offsetTarget.(TrialNum).FixationY=offsetTarget.(TrialNum).FixationY(1:length(offsetTarget.(TrialNum).FixationX));
                    elseif length(offsetTarget.(TrialNum).FixationY)<length(offsetTarget.(TrialNum).FixationX)
                        offsetTarget.(TrialNum).FixationX=offsetTarget.(TrialNum).FixationX(1:length(offsetTarget.(TrialNum).FixationY));
                    end
                end
                
                coordinates.(TrialNum).fix2tgt=[offsetTarget.(TrialNum).FixationX'  offsetTarget.(TrialNum).FixationY'];
                coordinates.(TrialNum).FixAbs=[(Heatmap.(TrialNum).OneFixationX)' (Heatmap.(TrialNum).OneFixationY)'];
                coordinates.(TrialNum).RelativeToCenter=coordinates.(TrialNum).fix2tgt;
                
                for validFixationIndexes=1:length(coordinates.(TrialNum).RelativeToCenter(:,1))
                    
                    degX=(coordinates.(TrialNum).RelativeToCenter(validFixationIndexes,1)/pix_deg);
                    degY=(coordinates.(TrialNum).RelativeToCenter(validFixationIndexes,2)/pix_deg_vert);
                    
                    for iii=2:length(sampleX)
                        for dd=2:length(sampleY)
                            if degX<=sampleX(iii) && degX>=sampleX(iii-1) && degY<=sampleY(dd) && degY>=sampleY(dd-1)
                                heatmatrix(iii-1,dd-1)=heatmatrix(iii-1,dd-1)+1;
                            end
                        end
                    end
                    fixcount=coordinates.(TrialNum).RelativeToCenter(validFixationIndexes,:);
                    BCEA_data(i)=fixcount(1,1);
                    fixcounter=[fixcounter;fixcount];
                    clear fixcount
                end
                numFixation.(TrialNum).Fix=fix;
            end
        end
    elseif sum(EyeSummary.(TrialNum).EyeData(:,5)>=EyeSummary.(TrialNum).TimeStamps.Fixation)==0
        numFixation.(TrialNum).Fix=0;
    end
    
    if BCEA_data(i)~=0 %extract info only for trials with enough data to calculate the BCEA
        if length(coordinates.(TrialNum).RelativeToCenter(:,1))>=5
            lax= coordinates.(TrialNum).RelativeToCenter(:,1)/pix_deg;
            lay= coordinates.(TrialNum).RelativeToCenter(:,2)/pix_deg_vert;
            
            %averaged center
            centerzX(i)=mean(lax);
            centerzY(i)=mean(lay);
            
            %center to the first fixation
            lax_centered_c=lax-centerzX(i);
            lay_centered_c=lay-centerzY(i);
            
            elllisin_centered_c(:,:,i)=cov(lax_centered_c,lay_centered_c);
            datasing_centered_c=[lax_centered_c lay_centered_c ];
            [eigenvec_centered_c, eigenval_centered_c ] = eig(elllisin_centered_c(:,:,i));
            d_c_c=sqrt(eigenval_centered_c);
            
            areaEll_centered_c=pi*d_c_c(1)*d_c_c(4);            
            areaEllarcmin_centered_c=3600*areaEll_centered_c;
            singletrialBCEA_centered_c(i)=round(areaEllarcmin_centered_c);
            
            dens_centered_c=std(datasing_centered_c)/length(datasing_centered_c)^(1/10);
            
            MAX_c_c=max(datasing_centered_c,[],1);
            MIN_c_c=min(datasing_centered_c,[],1);
            Range_centered_c=MAX_c_c-MIN_c_c;
            MAX_XY_c_c=MAX_c_c+Range_centered_c;
            MIN_XY_c_c=MIN_c_c-Range_centered_c;
            % you can choose different ranges, es
            %   MAX_XY_c_c=MAX+Range/4; MIN_XY=MIN-Range/4;
            %     MIN_XY_c_c=MAX+Range/2; MIN_XY=MIN-Range/2;
            try
                correctCounter(i)=1;
                [bandwidth_c_c,densitysi_c_c,Xsi_c_c,Ysi_c_c]=kde2d_mm(datasing_centered_c,npern,MAX_XY_c_c,MIN_XY_c_c,dens_centered_c);
                Kernel_X_centered(:,:,i)=Xsi_c_c;
                Kernel_Y_centered(:,:,i)=Ysi_c_c;
                Kernel_density_centered(:,:,i)=densitysi_c_c;
                postcounter_c_c=postcounter_c_c+1;
            catch
            end
        end
    end
end


BCEA_analysis=nan(totaltrial,1);
for i=firsttrial:totaltrial
    TrialNum = strcat('Trial',num2str(i));
    if BCEA_data(i)~=0
        BCEA_analysis(i,1)=mean(coordinates.(TrialNum).RelativeToCenter(:,1));
        BCEA_analysis(i,2)=mean(coordinates.(TrialNum).RelativeToCenter(:,2));
    end
end

BCEA_area_arcmin=nan(totaltrial,1);
average_X=nan(totaltrial,1);
average_Y=nan(totaltrial,1);
frameNum=nan(totaltrial,1);

for i=firsttrial:totaltrial
    TrialNum = strcat('Trial',num2str(i));
    lax=[];
    lay=[];
    if BCEA_data(i)~=0
        lax= coordinates.(TrialNum).RelativeToCenter(:,1)/pix_deg;
        lay= coordinates.(TrialNum).RelativeToCenter(:,2)/pix_deg_vert;
        frameNum(i)=length(lax);
        if length(lax)>2
            ellli=cov(lax,lay);
            data=[lax lay];
            [eigenvec, eigenval ] = eig(ellli);
            d=sqrt(eigenval);
            areaEll=pi*d(1)*d(4);
            areaEllarcmin=3600*areaEll;
            BCEA_area_arcmin(i)=areaEllarcmin;
            average_X(i)=mean(lax);
            average_Y(i)=mean(lay);
        end
    end
end

BCEA_area_arcmin_total=BCEA_area_arcmin;
meanBCEA=nanmean(BCEA_area_arcmin);
std_devBCEA=nanstd(BCEA_area_arcmin);
%outlier cutoff to clean up the dataset
cutoffBCEA=meanBCEA+(2*std_devBCEA);

for uie=1:totaltrial
    if BCEA_area_arcmin_total(uie)> cutoffBCEA
        adjustBCEA(uie)=1;
    else
        adjustBCEA(uie)=0;
    end
end

%consider only trials for which we could calculate a BCEA
BCEA_area_arcmin=BCEA_area_arcmin_total(~isnan(BCEA_area_arcmin_total));
%outlier removed
BCEA_area_arcmin_adj=BCEA_area_arcmin_total(adjustBCEA==0);
BCEA_area_arcmin_adj=BCEA_area_arcmin_adj(~isnan(BCEA_area_arcmin_adj));

figure
subplot(1,2,1)
hist(BCEA_area_arcmin);
xlabel('BCEA area (arcmin2)', 'fontsize', 16);
ylabel('# of trials', 'fontsize', 26);
set(gca,'FontSize',25)

subplot(1,2,2)
hist(BCEA_area_arcmin_adj);
xlabel('BCEA area (arcmin2) - adj', 'fontsize', 16);
ylabel('# of trials', 'fontsize', 26);
set(gca,'FontSize',25)
suptitle( [SUBJECT BasePost 'single trial BCEA adj' ]);

figure
hist(BCEA_area_arcmin_adj);
xlabel('BCEA area (arcmin2) - adj', 'fontsize', 16);
ylabel('# of trials', 'fontsize', 26);
set(gca,'FontSize',26)
title( [SUBJECT BasePost ' single trial BCEA' ]);
xlabel('BCEA area (arcmin2) - adj', 'fontsize', 16);

figure
hist(BCEA_area_arcmin_adj)
xlabel('BCEA area (arcmin2) - adj', 'fontsize', 16);
ylabel('# of trials', 'fontsize', 26);
set(gca,'FontSize',26)
title( [SUBJECT BasePost ' single trial BCEA' ]);
xlabel('arcmin', 'fontsize', 28);
xlim([0 40000]);


%remove BCEA with 0 value
BCEA_area_arcmin_nozero=BCEA_area_arcmin(BCEA_area_arcmin~=0);

%remove x for which the BCEA was beyond the outlier cutoff
frameNum_adj=frameNum(adjustBCEA==0);
%remove x with NAN values
frameNum_clean=frameNum(~isnan(frameNum));
frameNum_clean=(frameNum_clean(frameNum_clean~=2 & frameNum_clean~=0 & frameNum_clean~=1));

BCEA_analysis_nozero=BCEA_analysis(~isnan(BCEA_analysis(:,1)),:);

BCEA_analysis_nozero=BCEA_analysis(~isnan(BCEA_analysis(:,1)),:);
if length(BCEA_analysis_nozero(:,1))>1
    BCEA_analysis_average=mean(BCEA_analysis_nozero);
else
    BCEA_analysis_average=BCEA_analysis_nozero;
end

%remove BCEA with zero value
BCEA_area_arcmin_nozero_adj=BCEA_area_arcmin_adj(BCEA_area_arcmin_adj~=0);
%eyeposnXnozero_adj=frameNum_adj(frameNum_adj~=0);
frameNum_clean_adj=frameNum_adj(~isnan(frameNum_adj));
frameNum_clean_adj=(frameNum_clean_adj(frameNum_clean_adj~=2 & frameNum_clean_adj~=0 & frameNum_clean_adj~=1));

% histograms of fixation duration with and without outlier removed
figure
subplot(1,2,1)

BCEA_area_deg=(BCEA_area_arcmin_nozero./3600);
BCEA_area_deg_full=(BCEA_area_arcmin_total./3600);


hist(BCEA_area_deg)

xlabel('BCEA (deg^2)', 'fontsize', 26);
ylabel('# of trials', 'fontsize', 26);
title('BCEA')
set(gca,'FontSize',16)

xlim([0 60]);
ylim([0 60]);

subplot(1,2,2)

BCEA_area_deg_adj=(BCEA_area_arcmin_nozero_adj./3600);

hist(BCEA_area_deg_adj);

xlabel('BCEA (deg^2) - adj', 'fontsize', 16);
ylabel('# of trials', 'fontsize', 20);
title('BCEA sans outlier')

set(gca,'FontSize',16)
xlim([0 60]);
ylim([0 60]);
suptitle( [SUBJECT BasePost ' single trial BCEA adj' ]);
print([Directory SUBJECT 'Fix stab_histBCEA_fix_deg_adjnormc'], '-dpng', '-r300'); %<-Save as PNG with 300 DPI

% boxplot of the size of the single-trial BCEAs
figure
set(gca,'FontSize',28)
G={'BCEA'};
boxplot(BCEA_area_deg_adj, G);
thenums=num2str(mean(BCEA_area_deg_adj));
text(1,max(BCEA_area_deg_adj)*0.8,['area: ' thenums(1:end-2) ' deg^2'], 'FontSize', 22)
set(gca,'FontSize',28)
ylabel('BCEA (deg^2)', 'fontsize', 28);

print([Directory SUBJECT 'Fix stab_boxplotBCEA_fixnormc'], '-dpng', '-r300'); %<-Save as PNG with 300 DPI

% plot of the location of the centers of the single-trial BCEAs

figure

% prepare graph grid
line([-15,15],[0,0],'LineWidth',1,'Color',[.1 .1 .1])
hold on
line([0,0], [-15,15],'LineWidth',1,'Color',[.1 .1 .1])
hold on
viscircles([0 0], 10/2,'EdgeColor',[.1 .1 .1],'DrawBackgroundCircle',false, 'LineWidth', 1);
viscircles([0 0], 20/2,'EdgeColor',[.1 .1 .1],'DrawBackgroundCircle',false, 'LineWidth', 1);
viscircles([0 0], 30/2,'EdgeColor',[.1 .1 .1],'DrawBackgroundCircle',false, 'LineWidth', 1);
text(0,-6, '5^{\circ} ', 'FontSize', 20)
text(0,-11, '10^{\circ} ', 'FontSize', 20)
text(0,-16, '15^{\circ} ', 'FontSize', 20)

set (gca,'YDir','reverse')
xlim([-25 25])
ylim([-25 25])

pbaspect([1 1 1]);


average_X_nozero=average_X(~isnan(average_X));
average_Y_nozero=average_Y(~isnan(average_Y));

scatter(average_X_nozero,average_Y_nozero, 10, [0 0 1],'filled');
averageCenterOfSingleTrialBCEAx=mean(average_X_nozero);
averageCenterOfSingleTrialBCEAy=mean(average_Y_nozero);

set(gca,'FontSize',26)

thetitle=[SUBJECT BasePost ' single-trial BCEA center'];
title(thetitle,'fontsize', 20);

ylabel('degrees of visual angle', 'fontsize', 28);
xlabel('degrees of visual angle', 'fontsize', 28);


print([Directory SUBJECT 'Fix stab_plotBCEAcentrnormc'], '-dpng', '-r300'); %<-Save as PNG with 300 DPI


% figure showing correlation of fixation duration X fixation BCEA with
% first fixation outside the scotoma in green and first fixation within the
% scotoma in red
figure

frameNumms=frameNum*13;
eyeposnXs=frameNumms./1000;

frameNum_cleanms=frameNum_clean*13;
BCEA_area_deg_nozero=BCEA_area_deg;
frameNum_cleans=frameNum_cleanms./1000;


srBCEA_area_deg_nozero=sqrt(BCEA_area_deg_nozero);
srBCEA_area_deg=sqrt(BCEA_area_deg_full);

lgBCEA_area_deg_nozero=log10(BCEA_area_deg_nozero);
lgBCEA_area_deg=log10(BCEA_area_deg_full);

logframeNum_cleanms=log10(frameNum_cleanms);
logframeNumms=log10(frameNumms);

scatter(logframeNum_cleanms, lgBCEA_area_deg_nozero,[], [1 0 0], 'filled')
coefs = polyfit(logframeNum_cleanms, lgBCEA_area_deg_nozero, 1);

coefsa=num2str(coefs(1));
coefsb=num2str(coefs(2));

if length(coefsa)>3
    plotcoefsa=coefsa(1:4);
else
    plotcoefsa=coefsa;
end

if length(coefsb)>3
    plotcoefsb=coefsb(1:4);
else
    plotcoefsb=coefsb;
end

coeffic= ['Y= ' plotcoefsa  'x + ' plotcoefsb ];
hold on;
text(max(logframeNum_cleanms)*.8, max(lgBCEA_area_deg_nozero)*5/3, coeffic)

set(gca,'FontSize',22)
% green dots = first fixation outside the scotoma
scatter(logframeNumms(fixations_outside_scotoma==1), lgBCEA_area_deg(fixations_outside_scotoma==1),[], [0 1 0],'filled' )

ylim([-7 7]);
xlim([2 4.5]);
xlabel('fixation duration (log(ms))', 'fontsize', 26);
ylabel('{\surd}BCEA', 'fontsize', 26);

title('BCEA X Fixation Duration')
print([Directory SUBJECT 'Fix stab_BCEA_fitnormc'], '-dpng', '-r300'); %<-Save as PNG with 300 DPI

% figure showing correlation of fixation duration X fixation BCEA
figure

frameNum_clean_adjs=(frameNum_clean_adj*13)/1000;

BCEA_area_deg_nozero_adj=BCEA_area_deg_adj;
scatter(frameNum_clean_adjs, BCEA_area_deg_nozero_adj, 'filled')
coefs = polyfit(frameNum_clean_adjs, BCEA_area_deg_nozero_adj, 1);
coefsa=num2str(coefs(1));
coefsb=num2str(coefs(2));

if length(coefs)>4
    coeffic= ['Y= ' coefsa(1:4)  'x + ' coefsb(1:4) ];
else
    coeffic= ['Y= ' coefsa  'x + ' coefsb ];
end
hold on
text(max(frameNum_clean_adjs)/3, max(BCEA_area_deg_nozero_adj)*2/3, coeffic)


xlabel('fixation duration (sec)', 'fontsize', 26);
ylabel('BCEA (deg^2)', 'fontsize', 26);
title('BCEA sans outlier')


xlim([0 max(frameNum_clean_adjs)*1.1]);
ylim([0 max(BCEA_area_deg_nozero_adj)*1.1]);

hold on; lsline
print([Directory SUBJECT 'Fix stab_BCEA_scatter_adjnormc'], '-dpng', '-r300'); %<-Save as PNG with 300 DPI

%histogram of fixation dispersion normalized by fixation duration
figure
subplot(1,2,1)

for tii=1:length(BCEA_area_deg)
    BCEA_area_deg_norm(tii)=BCEA_area_deg(tii)/frameNum_cleans(tii);
end

hist(BCEA_area_deg_norm)
set(gca,'FontSize',14)


xlabel('BCEA (deg^2)/duration(s)', 'fontsize', 18);
ylabel('# of trials', 'fontsize', 26);
title('BCEA')

xlim([0 60]);
ylim([0 60]);


subplot(1,2,2)

for tii=1:length(BCEA_area_deg_nozero_adj)
    BCEA_area_deg_adj_norm(tii)=BCEA_area_deg_nozero_adj(tii)/frameNum_clean_adjs(tii);
end


hist(BCEA_area_deg_adj_norm);

xlabel('BCEA (deg^2)/duration(s) - adj', 'fontsize', 18);
ylabel('# of trials', 'fontsize', 26);
title('BCEA sans outlier');

set(gca,'FontSize',14);

xlim([0 60]);
ylim([0 60]);

suptitle( [SUBJECT BasePost 'single-trial BCEA normalized' ]);
print([Directory SUBJECT 'Fix stab_histBCEA_fix_deg_normlznormc'], '-dpng', '-r300'); %<-Save as PNG with 300 DPI

hist(log10(BCEA_area_deg_norm))

ylabel('# of trials', 'fontsize', 22);
xlabel('BCEA (deg^2)/duration(s)', 'fontsize', 18);
set(gca,'FontSize',20)

title('BCEA')

xlim([-3 3]);
ylim([0 35]);


print([Directory SUBJECT 'Fix stab_histBCEA_fix_log_normlznormc'], '-dpng', '-r300'); %<-Save as PNG with 300 DPI

durationTrialSec=durationTrial*ifi;
durationTrial_nozero=(durationTrialSec(durationTrial~=0));
averageduration=mean(durationTrial_nozero);

cutoff_time=2*std(durationTrial_nozero);
cutoff_time2=-2*std(durationTrial_nozero);

for icu=firsttrial:totaltrial
    if durationTrialSec(icu)>cutoff_time2 && durationTrialSec(icu)<cutoff_time
        newduration_no_outl(icu)=durationTrialSec(icu);
    end
end
if exist('newduration_no_outl')
    newduration_nozero_nooutl=(newduration_no_outl(newduration_no_outl~=0));

    averagedurationOut=mean(newduration_nozero_nooutl);

    ratioTime=durationTrialSec/averageduration;

    ratioTimeOut=newduration_no_outl/averagedurationOut;

    for fif=firsttrial:length(ratioTimeOut)
        ratioTimeOut(fif)=ratioTimeOut(fif)*fif;
    end
else
end

%weighted, center to the single trial BCEA
XAverage_c_c_w_a=zeros(npern,npern);
YAverage_c_c_w_a=zeros(npern,npern);
densityAverage_c_c_w_a=zeros(npern,npern);
countingo_c_c_w_a=0;
for shis=firsttrial:totaltrial
    if correctCounter(shis)==1
        countingo_c_c_w_a=countingo_c_c_w_a+1;
        XAverage_c_c_w_a=[XAverage_c_c_w_a+Kernel_X_centered(:,:,shis)];
        YAverage_c_c_w_a=[YAverage_c_c_w_a+Kernel_Y_centered(:,:,shis)];
        densityAverage_c_c_w_a=[densityAverage_c_c_w_a+(Kernel_density_centered(:,:,shis)/durationTrial(shis))];
    end
end
XAverage_c_c_w_a=XAverage_c_c_w_a/countingo_c_c_w_a;
YAverage_c_c_w_a=YAverage_c_c_w_a/countingo_c_c_w_a;
densityAverage_c_c_w_a=densityAverage_c_c_w_a/countingo_c_c_w_a;

figure
line([-15,15],[0,0],'LineWidth',1,'Color',[.1 .1 .1])
hold on
line([0,0], [-15,15],'LineWidth',1,'Color',[.1 .1 .1])
hold on
viscircles([0 0], 10/2,'EdgeColor',[.1 .1 .1],'DrawBackgroundCircle',false, 'LineWidth', 1);
viscircles([0 0], 20/2,'EdgeColor',[.1 .1 .1],'DrawBackgroundCircle',false, 'LineWidth', 1);
viscircles([0 0], 30/2,'EdgeColor',[.1 .1 .1],'DrawBackgroundCircle',false, 'LineWidth', 1);
%text(0,-6, '5^{\circ} ', 'FontSize', 20)
text(0,-11, '10^{\circ} ', 'FontSize', 20)
text(0,-16, '15^{\circ} ', 'FontSize', 20)

xlim([-25 25])
ylim([-25 25])
pbaspect([1 1 1]);

set (gca,'YDir','reverse');


%centered to the average center of each trial's BCEA
XAverage_c_c_w_a=XAverage_c_c_w_a+averageCenterOfSingleTrialBCEAx;
YAverage_c_c_w_a=YAverage_c_c_w_a+averageCenterOfSingleTrialBCEAy;
hold on
contour3(XAverage_c_c_w_a,YAverage_c_c_w_a,densityAverage_c_c_w_a,50);
hold on
view(2)
set(gca, 'FontName', 'Arial');

set(gca,'FontSize',26);

name2=[SUBJECT BasePost ' KDE Stability'];
title(name2);
hold on
ylabel('degrees of visual angle', 'fontsize', 28);
xlabel('degrees of visual angle', 'fontsize', 28);


print([Directory SUBJECT 'Fix stab_KDE_nocaptionnormc'], '-dpng', '-r300'); %<-Save as PNG with 300 DPI

hold on
meanBCEA_deg=meanBCEA/3600;
txt10=num2str(meanBCEA_deg);


if meanBCEA_deg>10
    txt10=txt10(1:5);
else
    txt10=txt10(1:4);
end
text(11,11, ['BCEA= ' txt10, ' deg^{' num2str(2) '}'], 'FontSize', 20)
print([Directory SUBJECT '_Fix stab KDE_with_BCEAnormc'], '-dpng', '-r300'); %<-Save as PNG with 300 DPI

%% RELEVANT SCORE(s)
fixationStability=meanBCEA_deg;
BCEAx = BCEA_analysis_average(1);
BCEAy = BCEA_analysis_average(2);

summaryDataFS.(SUBJECT).fixationStability(str2double(answer{2}))=fixationStability;
summaryDataFS.(SUBJECT).BCEAx(str2double(answer{2}))=BCEAx;
summaryDataFS.(SUBJECT).BCEAy(str2double(answer{2}))=BCEAy;

save([Directory 'summaryDataFS.mat'],"summaryDataFS");